:root {
    --color-background: lightgray;
    --color-cancel: red;
    --color-highlight: yellow;
    --color-hovered: lightblue;
    --color-menu: grey;
    --color-error: pink;
    --color-info: lightblue;
    --color-submit: green;
    --color-text: black;
    --color-textbox: white;
    --color-grab: rgb(230,230,230);
    --color-selected: lightgreen;
    --color-toolbar: rgb(180,180,180);
}
html, body {
    margin: 0;
    padding: 0;
    font: sans-serif;
}
* {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
}
body {
    height: 100vh;
    width: 100vw;
    overflow: hidden;
    background-color: var(--color-background);
}
#body, #body > div {
    position: absolute;
    top: 0;
    left: 0;
    height: 100vh;
    width: 100vw;
}
button.noDefault {
    border: 0;
    padding: 0;
    margin: 0;
    overflow: visible;
    background: none;
    box-shadow: none;
}
#inputPane {
    display: flex;
    flex-direction: row-reverse;
    padding: 0;
    box-sizing: border-box;
    pointer-events: none;
    z-index: 1;
}
#leftPane {
    flex-grow: 1;
    flex-shrink: 1;
    position: relative;
    overflow: none;
    pointer-events: auto;
}
#leftPane.closed {
    pointer-events: none;
}
#leftPane > * {
    pointer-events: auto;
}
#rightPane {
    display: block;
    position: relative;
    background-color: var(--color-menu);
    pointer-events: auto;
    overflow: visible;
    max-width: min(100%, 25rem);
    transition: max-width 0.5s ease-out;
}
span.space {
    display: inline-block;
    width: 0.5rem;
}
.submitable {
    color: var(--color-submit);
}
.cancelable {
    color: var(--color-cancel);
}
.helpable {
    color: var(--color-menu);
}
.clickable {
    cursor: pointer;
}
.clickable:hover {
    color: var(--color-hovered);
}
/* Text bar */
.input {
    width: 70dvw;
    max-height: 75dvh;
    display: flex;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
    flex-direction: column;
    align-items: center;
    justify-items: center;
}
.textbar {
    box-sizing: border-box;
    display: block;
    padding-right: 1.5rem;
    height: 3rem;
    width: 100%;
    background-color: var(--color-textbox);
    border-radius: 1.5rem;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: start;
}
.textbar img {
    height: 2rem;
    margin: 0 0.5rem;
}
.input > ul {
    width: 70%;
    list-style: none;
    overflow-y: scroll;
    border-radius: 0 0 2rem 2rem;
    padding: 0;
    margin: 0;
    background-color: var(--color-textbox);
}
.input > ul > span {
    display: block;
    height: 2rem;
}
.input > ul > li {
    position: relative;
    text-wrap: nowrap;
    height: 2.5rem;
    align-content: center;
}
.input > ul > li:before{
  content: "";
  display: block;
  position: absolute;
  top: -1px;
  left: 10%;
  height: 1px;
  width: 80%;
  background-color: var(--color-background);
}
.input > ul svg {
    height: 1rem;
    margin: 0 0.5rem;
}
.textbar > .mathInput {
    height: 100%;
}
.mathInput {
    height: 2rem;
    width: 100%;
    position: relative;
    display: block;
}
.mathInput > input {
    display: block;
    position: absolute;
    box-sizing: border-box;
    border: none;
    box-shadow: 0 1px grey;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    caret-color: transparent;
}
.mathInput > svg {
    display: block;
    position: absolute;
    margin: 0;
    top: 0;
    left: 0;
    height: 100%;
    max-width: 100%;
}
.mathInput > .popup {
    z-index: 1;
    display: flex;
    flex-direction: row;
    position: absolute;
    bottom: -50%;
    height: 50%;
    width: 100%;
    padding: 0 1rem;
    background-color: var(--color-textbox);
    overflow-x: scroll;
    overflow-y: hidden;
    box-sizing: border-box;
}
.mathInput > .popup a {
    width: fit-content;
}
.mathInput > .popup svg {
    height: 100%;
    margin: 0 0.1rem;
}
/* Menu */
#menuToggle {
    position: absolute;
    height: 1.5rem;
    top: 0.5rem;
    right: 0.5rem;
    transition: right 0.5s ease-out;
}
#menuToggle.closed {
    right: -2rem;
    transition: right 0.5s ease-out;
}
#rightPane.closed {
    max-width: 0;
    transition: max-width 0.5s ease-out;
}
#menu {
    position: relative;
    display: block;
    max-height: 100%;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    box-sizing: border-box;
    overflow-x: clip;
    overflow-y: scroll;
}
#menu ul {
    display: flex;
    width: min(100%, 25rem);
    flex-direction: column;
    box-sizing: border-box;
    margin: 0;
    padding: 0 0 0 1.5rem;
}
#menu * {
    margin: 0;
    padding: 0;
}
#menu p {
    vertical-align: middle;
}
#menu li {
    list-style: none;
    overflow-x: scroll;
    white-space: nowrap;
}
#menu svg {
    height: 100%;
}
.menuTitle {
    width: 100%;
    display: flex;
    flex-direction: row;
    height: 2rem;
    vertical-align: middle;
    margin: 0;
}
.menuTitle > h1 {
    text-decoration: underline;
    text-wrap: nowrap;
}
.menuTitle > h1::before {
    content: url(../img/arrow.svg);
    display: inline-block;
    height: 1.5rem;
    width: 1.5rem;
    vertical-align: -10%;
    rotate: 0;
    transition: rotate 0.5s linear;
}
.menuTitle.shown > h1::before {
    rotate: 90deg;
    transition: rotate 0.5s linear;
}
#menu .menuAction {
    margin-right: 1rem;
    margin-left: auto;
    justify-self: end;
    font-size: 1.5rem;
    height: 2rem;
}
.subMenu {
    padding-left: 1rem;
    box-sizing: border-box;
    height: 0;
    overflow: hidden;
    transition: height 0.5s ease-out;
}
.subMenu.shown {
    height: auto;
    height: calc-size(auto); /* Only a few limited browsers support this for now */
    transition: height 0.5s ease-out;
}
.equationMenu * {
    height: 100%;
    white-space: nowrap;
}
#menu li.equationMenu {
    height: 1rem;
    width: 100%;
    display: flex;
    flex-direction: row;
    overflow-x: scroll;
}
.toggleActionsSidebar {
    display: flex;
    flex-direction: row;
}
.toggleActionsSidebar > span {
    min-width: 0.5rem;
}
.toggleActionsSidebar > div {
    height: 1rem;
}
/* Notifications */
#notification {
    height: 100%;
    display: flex;
    pointer-events: none;
    flex-direction: column;
    align-items: center;
}
.notificationMessage {
    position: relative;
    display: block;
    width: 80vw;
    overflow-y: scroll;
    text-align: center;
    margin: 0.2rem 0;
    padding: 0 0.2rem;
    border-radius: 0.5rem;
    pointer-events: auto;
}
.notificationError {
    background-color: var(--color-error);
}
.notificationError svg {
    color: var(--color-cancel);
}
.notificationInfo {
    background-color: var(--color-info);
}
.notificationInfo svg {
    color: var(--color-menu);
}
.notificationMessage > svg {
    float: right;
    padding: auto 0;
    width: 1rem;
    height: 100%;
}
.notificationMessage >pre {
    float: left;
    margin: 0.2rem 0;
    padding: 0;
    vertical-align: center;
}
/* Dialog*/
dialog {
    position: absolute;
    top: 50vh ;
    left: 50vw;
    margin: 0;
    transform: translateY(-50%) translateX(-50%);
    overflow-y: scroll;
    max-height: 90vh;
}
dialog > form {
    display: flex;
    flex-direction: column;
}
dialog svg {
    height: 2rem;
    margin: 0 0.5rem;
}
.radioSelection * {
    vertical-align: middle;
}
/* Draggable */
.draggable {
    box-sizing: border-box;
    position: relative;
}
.border {
    position: absolute;
    display: block;
    background-color: var(--color-menu);
}
/* Equation */
.equationHolder {
    background-color: var(--color-background);
    width: 100%;
    height: 100%;
    overflow: hidden;
    display: grid;
    grid-template-columns: 1fr auto;
    grid-template-rows: 1fr auto;
}
.equation {
    grid-column: 1;
    grid-row: 1;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    flex-shrink: 1;
    overflow: scroll;
}
.contextualToolbar {
    grid-column: 1/3;
    grid-row: 3;
    min-height: 2rem;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    overflow: scroll;
    background-color: var(--color-toolbar);
}
.contextualTopic {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    margin-left: 0.1rem;
    margin-right: 0.1rem;
    white-space: nowrap;
}
.contextualAction {
    display: flex;
}
.contextualActionLabel {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 0.2rem;
    margin-bottom: 0.2rem;
    margin-left: 0.1rem;
    margin-right: 0.1rem;
    padding-left: 0.4rem;
    padding-right: 0.4rem;
    background-color: var(--color-textbox-alternate);
    border-radius: 0.4rem;
}
.contextualDisabled {
    pointer-events: none;
    color: var(--color-background);
}
.node {
    padding: 0.2rem;
    display: inline-block;
    border: none
}
/* https://stackoverflow.com/a/73901232 to thank */
.node:not(.selected):not(:has(.node:hover)):hover {
    border: var(--color-highlight) thin solid;
}
.node.selected {
    border: var(--color-selected) thin solid;
}

.brickRect {
    stroke: black;
    fill: #FFF;
}
.brickText {
    text-anchor: middle;
    dominant-baseline: central;
    fill: none;
    stroke: black;
    stroke-width: 0.075;
    stroke-linecap: round;
    stroke-linejoin: round;
    user-select: none;
}
.brick:hover > .brickRect {
    stroke: var(--color-highlight);
}
.brick.selected > .brickRect {
    fill: var(--color-selected);
}
.brick.grabbed > .brickRect {
    stroke: var(--color-grab);
    cursor: grabbing;
}
.brick.commutable > .brickRect {
    cursor: ew-resize;
}
.mathStroke {
    stroke: currentColor;
    stroke-linecap: round;
    stroke-linejoin: round;
    fill: none;
}
.mathStroke.stroke {
    stroke: var(--color-text);
}
.stroke:not(.selected):hover {
    stroke: var(--color-highlight);
}
.stroke.selected {
    stroke: var(--color-selected);
}
/* Equation */
.historyHolder {
    display: flex;
    flex-direction: row;
    grid-column: 2;
    grid-row: 1/3;
    min-width: 2rem;
}
.historyHolder > a {
    writing-mode: vertical-rl;
    text-align: center;
    overflow: scroll;
}
.historyHolder > div {
    height: 100%;
    display: flex;
    flex-direction: column;
    overflow: clip;
}
div.history {
    padding: 0 0.5rem;
    display: flex;
    flex-direction: column;
    position: relative;
    overflow: scroll;
}
div.history a {
    position: relative;
    display: block;
    padding-left: 1rem;
    height: 1rem;
}
div.history div {
    position: relative;
    display: block;
    padding-left: 0.5rem;
}
div.history a > svg {
    height: 100%;
}
div.history a::before, div.history div::before {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 1rem;
    overflow: hidden;
    content: url("../img/history_middle.svg") / "├";
}
div.history a:first-child:before, div.history div:first-child:before {
    content: url("../img/history_top.svg") / "┬";
}
div.history a:last-child:before {
    content: url("../img/history_bottom.svg") / "└";
}
div.history a:first-child:last-child:before, div.history div:first-child:last-child:before {
    content: url("../img/history.svg") / "─";
}
.history .selected, .history .selected::before {
    color: var(--color-highlight);
}
/* Actions */
.topics {
    float: right;
    position: relative;
    margin-block: 0;
    padding-inline: 1rem;
    list-style-type: none;
    height: 100%;
    overflow-y: scroll;
    background-color: var(--color-menu);
    z-index: 1;  /* this is needed because the draggables have position:absolute */
}
.topic {
    padding-top: 0.5rem;
}
.topic > h2 {
    font-size: 1.5rem;
    margin-block: 0.2rem;
}
.actions {
    padding-inline-start: 1rem;
}
.action > h3 {
    font-size: 1rem;
    margin-block: 0.2rem;
}
.match > span > svg {
    height: 1.5rem;
}
.disallowed {
    text-decoration: line-through;
    pointer-events: none;
    color: var(--color-background);
}
#actionsToggle {
    position: absolute;
    height: 1.5rem;
    top: 0.5rem;
    right: 0.5rem;
    z-index: 1;
}
#actionsToggle.closed {
    right: 0.5rem;
}