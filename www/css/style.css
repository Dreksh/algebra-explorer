:root {
    --color-background: lightgray;
    --color-cancel: red;
    --color-highlight: yellow;
    --color-hovered: lightblue;
    --color-menu: grey;
    --color-notification: pink;
    --color-submit: green;
    --color-text: black;
    --color-textbox: white;
    --color-selected: lightgreen;
}
html, body {
    margin: 0;
    padding: 0;
    font: sans-serif;
}
body {
    height: 100vh;
    width: 100vw;
    background-color: var(--color-background);
}
body > div {
    position: absolute;
    pointer-events: none;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
}
body > div > * {
    pointer-events: auto;
}
button.noDefault {
    border: 0;
    padding: 0;
    margin: 0;
    overflow: visible;
    background: none;
    box-shadow: none;
}
#inputPane {
    display: flex;
    flex-direction: row;
    padding: 0;
    box-sizing: border-box;
}
#leftPane {
    flex-grow: 1;
    flex-shrink: 1;
    pointer-events: none;
    position: relative;
    overflow: none;
}
#leftPane > * {
    pointer-events: auto;
}
#rightPane {
    display: block;
    position: relative;
    background-color: var(--color-menu);
    overflow: visible;
    width: min(15rem, 30vw);
    max-width: min(15rem, 30vw);
    transition: max-width 0.5s ease-out;
}
span.space {
    display: inline-block;
    width: 1rem;
}
.submitable {
    color: var(--color-submit);
}
.cancelable {
    color: var(--color-cancel);
}
.helpable {
    color: var(--color-menu);
}
.clickable {
    cursor: pointer;
}
.clickable:hover {
    color: var(--color-hovered);
}
/* Text bar */
@keyframes textbarAppear {
    from { width: 0; padding-right: 0; }
    to { width: 70%; padding-right: 3rem; }
}
@keyframes textbarDisappear {
    from { width: 70%; padding-right: 3rem; }
    to { width: 0; padding-right: 0; }
}
.textbar {
    position: absolute;
    box-sizing: border-box;
    width: 70%;
    height: 3rem;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
    background-color: var(--color-textbox);
    border-radius: 1.5rem;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: start;
    animation: textbarAppear 0.5s ease-out forwards;
}
.textbar.deleting {
    animation: textbarDisappear 0.5s ease-out forwards;
}
.textbar svg {
    height: 2rem;
    margin: 0 0.5rem;
}
.textbar > input[type="text"] {
    height: 100%;
    padding: 0;
    margin: 0;
    min-width: 0;
    font-size: 2rem;
    box-sizing: border-box;
    background: none;
    border: none;
    box-shadow: none;
    flex-grow: 1;
    flex-shrink: 1;
}
/* Menu */
#menuToggle {
    position: absolute;
    height: 1.5rem;
    top: 0.5rem;
    left: calc(min(15rem, 30vw) - 2rem);
    z-index: 1;
    transition: left 0.5s ease-out;
}
#menuToggle.closed {
    left: 0.5rem;
    transition: left 0.5s ease-out;
}
#rightPane.closed {
    max-width: 0;
    transition: max-width 0.5s ease-out;
}
#menu {
    position: relative;
    display: block;
    padding-top: 0.5rem;
    overflow-x: hidden;
    overflow-y: auto;
}
#menu ul {
    margin: 0;
    width: 15rem;
    padding: 0 0 0 0.5rem;
}
#menu li {
    list-style: none;
    overflow: hidden;
}
#menu svg {
    height: 1rem;
    vertical-align: -17%;
}
li.menuSection {
    height: 0;
    transition: height 0.5s linear;
}
li.menuSection.shown {
    height: auto;
    height: calc-size(auto); /* Only a few limited browsers support this for now */
    transition: height 0.5s linear;
}
.menuTitle::before {
    content: url(../img/arrow.svg);
    display: inline-block;
    height: 2rem;
    width: 2rem;
    vertical-align: middle;
    rotate: 0;
    transition: rotate 0.5s linear;
}
.menuTitle.shown::before {
    rotate: 90deg;
    transition: rotate 0.5s linear;
}
.menuTitle {
    display: inline-block;
    height: 2rem;
    vertical-align: middle;
    text-wrap: nowrap;
    margin: 0;
}
.subMenu {
    padding-left: 1rem;
    box-sizing: border-box;
    height: 0;
    overflow: hidden;
    transition: height 0.5s ease-out;
}
.subMenu.shown {
    height: auto;
    height: calc-size(auto); /* Only a few limited browsers support this for now */
    transition: height 0.5s ease-out;
}
.subMenu p, .subMenu li {
    display: block;
    margin: 0;
    padding: 0;
}
/* Notifications */
#notification {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: end;
    align-items: center;
}
@keyframes notificationAppear {
    from { max-height: 0; }
    to { max-height: 8rem; }
}
@keyframes notificationDisappear {
    from { max-height: 8rem; }
    to { max-height: 0; }
}
.notificationMessage {
    display: block;
    width: 80vw;
    overflow-y: scroll;
    text-align: center;
    margin: 0.2rem 0;
    padding: 0 0.2rem;
    border-radius: 0.5rem;
    background-color: var(--color-notification);
    animation: notificationAppear 0.5s ease forwards;
}
.notificationMessage.deleting {
    animation: notificationDisappear 0.5s ease forwards;
}
.notificationMessage > svg {
    float: right;
    margin-top: 0.5rem;
    height: 1rem;
}
.notificationMessage >pre {
    float: left;
    margin: 0.2rem 0;
    padding: 0;
    vertical-align: center;
}
/* Dialog*/
dialog {
    position: absolute;
    top: 50vh ;
    left: 50vw;
    margin: 0;
    transform: translateY(-50%) translateX(-50%);
    overflow-y: scroll;
    max-height: 90vh;
}
dialog > form {
    display: flex;
    flex-direction: column;
}
dialog svg {
    height: 2rem;
    margin: 0 0.5rem;
}
/* Display */
#display {
    display:flex;
    flex-direction: column;
    align-items: center;
}
.node {
    padding: 0.2rem;
    display: inline-block;
    border: none
}
/* https://stackoverflow.com/a/73901232 to thank */
.node:not(.selected):not(:has(.node:hover)):hover {
    border: var(--color-highlight) thin solid;
}
.node.selected {
    border: var(--color-selected) thin solid;
}

/* .blocks {
    display: grid;
    column-gap: .3rem;
} */
.block {
    stroke: black;
    rx: 0.2;
    fill: #FFF;
}
.block:hover {
    stroke: var(--color-highlight)
}
.blockText {
    font: 0.5pt monospace;
    text-anchor: middle;
    dominant-baseline: central;
    fill: black;
}
.block.selected {
    fill: var(--color-selected);
}
/* History */
#history div {
    padding-left: 0.2rem;
}